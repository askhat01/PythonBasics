# 1. Создать список и заполнить его элементами различных типов данных. Реализовать скрипт проверки типа данных каждого элемента. 
# Использовать функцию type() для проверки типа. 
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.

my_list = [1, 'String', None, True, 4.1, {1, 2, 3}, (9+2j), ""]

for i, item in enumerate(my_list, 1):
    print(f"{i}) {item} -> {type(item)}")

# 2. Для списка реализовать обмен значений соседних элементов. 
# Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т. д. 
# При нечётном количестве элементов последний сохранить на своём месте. 
# Для заполнения списка элементов нужно использовать функцию input().

my_list = input("Введите числа через пробел: ").split()
if len(my_list) % 2 == 0:
    i = 0
    while i < len(my_list):
        l = my_list[i]
        my_list[i] = my_list[i+1]
        my_list[i+1] = l
        i += 2
else:
    i = 0
    while i < len(my_list) - 1:
        l = my_list[i]
        my_list[i] = my_list[i + 1]
        my_list[i + 1] = l
        i += 2
print(my_list)

# 3. Пользователь вводит месяц в виде целого числа от 1 до 12. 
# Сообщить, к какому времени года относится месяц (зима, весна, лето, осень). 
# Напишите решения через list и dict.

seasons_list = ['зима', 'весна', 'лето', 'осень']
seasons_dict = {1 : 'зима', 2 : 'весна', 3 : 'лето', 4 : 'осень'}
month = int(input("Введите номер месяца в виде целого числа от 1 до 12: "))

if month in (1, 12, 2):
    print(f"Месяц под номером {month} относится к времени года - {seasons_list[0]}")
elif month in (3, 4, 5):
    print(f"Месяц под номером {month} относится к времени года - {seasons_list[1]}")
elif month in (6, 7, 8):
    print(f"Месяц под номером {month} относится к времени года - {seasons_list[2]}")
elif month in (9, 10, 11):
    print(f"Месяц под номером {month} относится к времени года - {seasons_list[3]}")
else:
    print("Такого месяца не существует")
    

# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами. 
# Вывести каждое слово с новой строки. Строки нужно пронумеровать. 
# Если слово длинное, выводить только первые 10 букв в слове.

my_string = input("Введите строку из нескольких слов, разделенных пробелами: ")
string = my_string.split(' ')

for i, n in enumerate(string, 1):
    print(f'{i}. {n[:10]}')

# 5. Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает. 
# У пользователя нужно запрашивать новый элемент рейтинга. 
# Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.

number = int(input("Введите новый элемент в виде натурального числа: "))
my_list = [7, 4, 3, 2]
c = my_list.count(number)
for element in my_list:
    if c > 0:
        i = my_list.index(number)
        my_list.insert(i+c, number)
        break
    else:
        if number > element:
            j = my_list.index(element)
            my_list.insert(j, number)
            break
        elif number < my_list[len(my_list) - 1]:
            my_list.append(number)
print(my_list)


# 6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. 
# Каждый кортеж хранит информацию об отдельном товаре. 
# В кортеже должно быть два элемента — номер товара и словарь с параметрами, то есть характеристиками товара: название, 
# цена, количество, единица измерения. Структуру нужно сформировать программно, запросив все данные у пользователя.

goods = []
features = {'Название': '', 'Цена': '', 'Количество': '', 'Единица измерения': ''}
analytics = {'Название': [], 'Цена': [], 'Количество': [], 'Единица измерения': []}
num = 0
while True:
    if input('Для выхода из программы нажмите "Q", для продолжения "Enter": ').upper()=='Q':
        break
    num += 1
    f_copy = features.copy()
    for f in features:
        pro = input(f'Введите значение свойства "{f}": ')
        f_copy[f] = int(pro) if f in 'Цена количество' and pro.isdigit() else pro
        analytics[f].append(f_copy[f])
    goods.append((num, f_copy))
    print(f"\nСтруктура товаров\n{goods}")
    print(f"\nТекущая аналитика по товарам: \n {'*' * 30}")
    for key, value in analytics.items():
        print(f'{key:>30}: {value}')
    print("*" * 30)
